scalar JSON

type Query {
    getProductById(id: String!): Product
    getVariantById(id: String!): Variant
    me: UserInfo
    loginUser(email: String!, password: String!): AuthTokens
}

type Mutation {
    registerUser(userRegistrationInput: UserRegistrationInput!): UserInfo
}

type Product {
    id: ID
    name: String
    skuId: String
    categoryName: String
    categoryId: String
    category: Category
    brandName: String
    brandId: String
    brand: Brand
    productTypeId: String
    productType: ProductType
    attributes: JSON
    variants: [Variant]
    translations: JSON
}

type ProductType {
    id: ID
    name: String
    slug: String
    productAttributes: JSON
    variantAttributes: JSON
    translations: JSON
}

type Variant {
    id: ID
    name: String
    slug: String
    skuId: String
    url: String
    seoTitle: String
    medias: [Media]
    seoDescription: String
    productType: ProductType
    attributes: JSON
    translations: JSON
}

type Brand {
    id: ID
    name: String
    avatar: String
    seoTitle: String
    seoDescription: String
    translations: JSON
}

type Category {
    id: ID
    name: String
    parentName: String
    parentId: String
    parent: Category
    seoTitle: String
    seoDescription: String
    translations: JSON
}

type Media {
    type: String
    defaultSrc: String
    lg: String
    md: String
    sm: String
    alt: String
}

type UserInfo {
    id: ID
    firstName: String
    lastName: String
    email: String
    avatar: String
    grandType: String
    roleId: String
    verified: String
    tokens: AuthTokens
}

type AuthTokens {
    accessToken: String
    refreshToken: String
}

input UserRegistrationInput {
    firstName: String!
    lastName: String
    email: String!
    password: String!
}